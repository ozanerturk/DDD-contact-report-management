// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace API.Migrations
{
    [DbContext(typeof(PersonContext))]
    [Migration("20201115233337_ColumnNameUpdate")]
    partial class ColumnNameUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:ddd.personseq", "'personseq', 'ddd', '1', '10', '', '', 'Int64', 'False'");

            modelBuilder.Entity("Domain.AggregatesModel.PersonAggregate.ContactInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Desciption")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("contactInformations","ddd");
                });

            modelBuilder.Entity("Domain.AggregatesModel.PersonAggregate.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:HiLoSequenceName", "personseq")
                        .HasAnnotation("Npgsql:HiLoSequenceSchema", "ddd")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("IdentityGuid")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("persons","ddd");
                });

            modelBuilder.Entity("Domain.AggregatesModel.PersonAggregate.ContactInformation", b =>
                {
                    b.HasOne("Domain.AggregatesModel.PersonAggregate.Person", null)
                        .WithMany("ContactInformations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Domain.AggregatesModel.PersonAggregate.Email", "Email", b1 =>
                        {
                            b1.Property<int>("ContactInformationId")
                                .HasColumnType("integer");

                            b1.Property<string>("EmailAddress")
                                .HasColumnName("Email")
                                .HasColumnType("text");

                            b1.HasKey("ContactInformationId");

                            b1.ToTable("contactInformations");

                            b1.WithOwner()
                                .HasForeignKey("ContactInformationId");
                        });

                    b.OwnsOne("Domain.AggregatesModel.PersonAggregate.Phone", "Phone", b1 =>
                        {
                            b1.Property<int>("ContactInformationId")
                                .HasColumnType("integer");

                            b1.Property<string>("PhoneNumber")
                                .HasColumnName("PhoneNumber")
                                .HasColumnType("text");

                            b1.HasKey("ContactInformationId");

                            b1.ToTable("contactInformations");

                            b1.WithOwner()
                                .HasForeignKey("ContactInformationId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
